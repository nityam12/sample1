{"version":3,"sources":["data.js","components/register/register.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["list","id","name","img","gender","age","date","status","Register","Card","props","className","alt","src","user","CardList","users","map","key","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","title","state","this","sort","a","b","i","split","filteredusers","filter","toLowerCase","includes","to","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b01daed2.chunk.js","sourcesContent":["const list = [\n  {\n    id: \"MnJJA0dbuw\",\n    name: \"Anand Sharma\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Anand.jpeg\",\n    gender: \"m\",\n    age: 46,\n    date: \"23/11/2019\",\n    status: \"onboarded\",\n  },\n  {\n    id: \"MnZmmmbuw\",\n    name: \"Malashri Lal\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Vishesh.jpg\",\n    gender: \"m\",\n    age: 70,\n    date: \"01/10/2019\",\n    status: \"active\",\n  },\n  {\n    id: \"MnZy10dpsq\",\n    name: \"Suhasini Haidar\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Suhasini.jpg\",\n    gender: \"f\",\n    age: 30,\n    date: \"23/03/2019\",\n    status: \"left\",\n  },\n  {\n    id: \"HOnmFt5jA\",\n    name: \"Vishesh Mahajan\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Vishesh.jpg\",\n    gender: \"m\",\n    age: 34,\n    date: \"05/05/2019\",\n    status: \"active\",\n  },\n  {\n    id: \"MnZy10dxyz\",\n    name: \"Anand Neelakantan\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Anand.jpeg\",\n    gender: \"m\",\n    age: 46,\n    date: \"03/10/2019\",\n    status: \"left\",\n  },\n  {\n    id: \"MnZy1JJbuw\",\n    name: \"Malashri\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Malashri.jpg\",\n    gender: \"f\",\n    age: 65,\n    date: \"04/01/2019\",\n    status: \"active\",\n  },\n  {\n    id: \"JKAS10dbuw\",\n    name: \"Meenakshi Madhavan\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Meenakshi.jpg\",\n    gender: \"f\",\n    age: 35,\n    date: \"01/03/2020\",\n    status: \"left\",\n  },\n  {\n    id: \"sOw8c6BOug\",\n    name: \"Fintan\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Fintan.jpg\",\n    gender: \"m\",\n    age: 55,\n    date: \"09/12/2019\",\n    status: \"onboarded\",\n  },\n  {\n    id: \"MnZy10dlll\",\n    name: \"Jaishree Periwal\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Jaishree.jpg\",\n    gender: \"f\",\n    age: 50,\n    date: \"01/02/2020\",\n    status: \"active\",\n  },\n  {\n    id: \"KbN3VELflA\",\n    name: \"Anukriti Upadhyay\",\n    img:\n      \"https://incablet-tests.s3.ap-south-1.amazonaws.com/conference-content/photos/sponsors/Anukriti.jpg\",\n    gender: \"f\",\n    age: 30,\n    date: \"31/01/2020\",\n    status: \"onboarded\",\n  },\n];\n\nexport default list;\n","import React from \"react\";\n\n\n\n\n\nconst Register = () => (\n  <div>\n    <p>jhkjhkj</p>\n  </div>\n);\n\nexport default Register;","import React from \"react\";\n\nimport \"./card.styles.css\";\n\nconst convert = (val) => {\n  let gender = \"\";\n  if (val === \"m\") {\n    gender = \"Male\";\n  } else {\n    gender = \"Female\";\n  }\n  return gender;\n};\n\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img alt=\"user\" src={props.user.img} />\n    <h2 className=\"name\">{props.user.name}</h2>\n    <p className=\"gender\">Gender : {convert(props.user.gender)}</p>\n    <p className=\"age\">Age : {props.user.age}</p>\n    <p\n      className={` status ${\n        props.user.status === \"left\"\n          ? \"left\"\n          : props.user.status === \"active\"\n          ? \"active\"\n          : \"on\"\n      }`}\n    >\n      {props.user.status}\n    </p>\n    <p>{props.user.date}</p>\n  </div>\n);\n","import React from \"react\";\n\nimport { Card } from \"../card/card.component\";\n\nimport \"./card-list.styles.css\";\n\nexport const CardList = (props) => (\n  <div className=\"card-list\">\n    {props.users.map((user) => (\n      <Card key={user.id} user={user} />\n    ))}\n  </div>\n);\n","import React from \"react\";\n\nimport \"./search-box.styles.css\";\n\n//life cycle mtd and state no then use funct component\n\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className=\"search\"\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange} //synthetic event\n  />\n);\n","import React, { Component } from \"react\";\nimport { Switch, Route, Redirect, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport list from \"./data\";\nimport Register from \"./components/register/register.component\";\nimport { CardList } from \"./components/card-list/card-list.component.jsx\";\nimport { SearchBox } from \"./components/search-box/search-box.component.jsx\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      list: [],\n      searchField: \"\",\n      title: \"\",\n    };\n\n    // this.handleChange = this.handleChange.bind(this); //impt to work for this\n  }\n\n  //life-cycle mtd\n  componentDidMount() {\n    //it return promise\n    // fetch(\n    //   \"https://5w05g4ddb1.execute-api.ap-south-1.amazonaws.com/dev/profile/listAll\"\n    // )\n    //   .then((response) => response.json())\n    //   .then((listAll) => this.setState({ list: listAll }))\n    //   .catch((err) => console.log(err));\n\n    this.setState({ list: list });\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value, title: e.target.value });\n  };\n\n  render() {\n    const { list, searchField, title } = this.state;\n\n    list.sort((a, b) => {\n      if (a.status === \"active\" && b.status === \"active\") {\n        return 0;\n      }\n\n      if (a.status === \"active\" && b.status === \"active\") {\n        return -1;\n      }\n\n      if (a.status === \"active\" && b.status !== \"active\") {\n        return -1;\n      }\n      return 1;\n    });\n\n    list.sort((a, b) => {\n      if (a.status === \"active\" || b.status === \"active\") {\n        return 0;\n      }\n      if (a.status === \"left\" && b.status === \"onboarded\") {\n        return -1;\n      }\n      return 1;\n    });\n\n    for (let i = 0; i <= 2; i++) {\n      list.sort(function (a, b) {\n        if (a.status === b.status) {\n          a = a.date.split(\"/\");\n          b = b.date.split(\"/\");\n          return a[i] < b[i] ? -1 : a[i] > b[i] ? 1 : 0;\n        } else return 0;\n      });\n    }\n\n    const filteredusers = list.filter((user) =>\n      user.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <Link to=\"/register\">Click here to Register</Link>\n\n        <h1>{title}</h1>\n        <SearchBox\n          placeholder=\"search users\"\n          handleChange={this.handleChange}\n        />\n\n        <CardList users={filteredusers}></CardList>\n        \n        <Switch>\n          <Route path=\"/register/\" component={Register} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}